name: Backend CI

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
    paths:
      - 'starter/backend/**'
env:
  # Set python Version
  PYTHON_VERSION: '3.10.6'

jobs:
  lint-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv --version
    
    - name: Cache pipenv
      uses: actions/cache@v3
      with:
        path: |
          starter/backend/.venv
          starter/backend/Pipfile.lock
        key: ${{ runner.os }}-pipenv-${{ hashFiles('starter/backend/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-    
  
    - name: Install dependencies
      run: |
        cd starter/backend
        pipenv install --dev      

    - name: Lint Project
      run: |
        cd starter/backend                
        pipenv run lint

  test-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv --version
    
    - name: Cache pipenv
      uses: actions/cache@v3
      with:
        path: |
          starter/backend/.venv
          starter/backend/Pipfile.lock
        key: ${{ runner.os }}-pipenv-${{ hashFiles('starter/backend/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-    
  
    - name: Install dependencies
      run: |
        cd starter/backend
        pipenv install --dev      

    - name: Test Project
      run: |
        cd starter/backend                
        pipenv run test

  build-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv --version
    
    - name: Cache pipenv
      uses: actions/cache@v3
      with:
        path: |
          starter/backend/.venv
          starter/backend/Pipfile.lock
        key: ${{ runner.os }}-pipenv-${{ hashFiles('starter/backend/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-    
  
    - name: Install dependencies
      run: |
        cd starter/backend
        pipenv install --dev      

    - name: Build Project
      run: |
        cd starter/backend                
        pipenv run test
    
    - name: Build Docker Image
      run: |
        cd starter/frontend        
        docker build --tag mp-backend:latest .